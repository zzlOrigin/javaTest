<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd">

    <!--开启自动扫描-->
    <context:component-scan base-package="com.kaishengit"/>
    <!--加载配置文件-->
    <context:property-placeholder location="classpath:config.properties"/>
    <!--数据库连接池-->
    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
        <property name="driverClassName" value="${jdbc.Driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>
    <!--事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!--开启基于注解的事务管理-->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!--MyBatis SqlSessionFactory-->
    <bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="typeAliasesPackage" value="com.kaishengit.entity"/>
        <!--Mapper文件-->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
        <!--其他配置-->
        <property name="configuration">
            <bean class="org.apache.ibatis.session.Configuration">
                <property name="mapUnderscoreToCamelCase" value="true"/>
            </bean>
        </property>
    </bean>
    <!--扫描MyBatis中的Mapper接口,并自动放入Spring容器-->
    <bean id="configurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.kaishengit.mapper"/>
    </bean>

    <!--SpringDubbo-->
    <dubbo:application name="KaolaService"/>
    <!--注册中心-->
    <dubbo:registry address="zookeeper://192.168.1.46:2181"/>
    <!--dubbo的协议和端口-->
    <dubbo:protocol host="192.168.1.46" name="dubbo" port="20880"/>
    <!--暴露服务-->
    <bean id="kaolaService" class="com.kaishengit.service.impl.KaolaServiceImpl"/>
    <dubbo:service interface="com.kaishengit.service.KaolaService" ref="kaolaService"/>
</beans>