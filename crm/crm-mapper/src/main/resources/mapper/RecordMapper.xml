<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kaishengit.crm.mapper.RecordMapper">
  <resultMap id="BaseResultMap" type="com.kaishengit.crm.entity.Record">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="setup" jdbcType="TIMESTAMP" property="setup" />
    <result column="chance_id" jdbcType="INTEGER" property="chanceId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.kaishengit.crm.entity.Record">
    <result column="context" jdbcType="LONGVARCHAR" property="context" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, setup, chance_id
  </sql>
  <sql id="Blob_Column_List">
    context
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.kaishengit.crm.Example.RecordExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.kaishengit.crm.Example.RecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.kaishengit.crm.Example.RecordExample">
    delete from t_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.kaishengit.crm.entity.Record">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_record (setup, chance_id, context
      )
    values (#{setup,jdbcType=TIMESTAMP}, #{chanceId,jdbcType=INTEGER}, #{context,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.kaishengit.crm.entity.Record">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="setup != null">
        setup,
      </if>
      <if test="chanceId != null">
        chance_id,
      </if>
      <if test="context != null">
        context,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="setup != null">
        #{setup,jdbcType=TIMESTAMP},
      </if>
      <if test="chanceId != null">
        #{chanceId,jdbcType=INTEGER},
      </if>
      <if test="context != null">
        #{context,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.kaishengit.crm.Example.RecordExample" resultType="java.lang.Long">
    select count(*) from t_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_record
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.setup != null">
        setup = #{record.setup,jdbcType=TIMESTAMP},
      </if>
      <if test="record.chanceId != null">
        chance_id = #{record.chanceId,jdbcType=INTEGER},
      </if>
      <if test="record.context != null">
        context = #{record.context,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update t_record
    set id = #{record.id,jdbcType=INTEGER},
      setup = #{record.setup,jdbcType=TIMESTAMP},
      chance_id = #{record.chanceId,jdbcType=INTEGER},
      context = #{record.context,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_record
    set id = #{record.id,jdbcType=INTEGER},
      setup = #{record.setup,jdbcType=TIMESTAMP},
      chance_id = #{record.chanceId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.kaishengit.crm.entity.Record">
    update t_record
    <set>
      <if test="setup != null">
        setup = #{setup,jdbcType=TIMESTAMP},
      </if>
      <if test="chanceId != null">
        chance_id = #{chanceId,jdbcType=INTEGER},
      </if>
      <if test="context != null">
        context = #{context,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.kaishengit.crm.entity.Record">
    update t_record
    set setup = #{setup,jdbcType=TIMESTAMP},
      chance_id = #{chanceId,jdbcType=INTEGER},
      context = #{context,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kaishengit.crm.entity.Record">
    update t_record
    set setup = #{setup,jdbcType=TIMESTAMP},
      chance_id = #{chanceId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <select id="findStaticNum" resultType="java.util.Map">
    SELECT
      count(*) * 100 / (SELECT count(*) FROM t_chance) AS 'value',
      progress AS 'name'
    FROM
      t_chance
    GROUP BY
      progress
    ORDER BY
      FIELD(
              progress,
              '初访',
              '意向',
              '报价',
              '成交',
              '暂时搁置'
      );
  </select>
</mapper>